{"version":3,"file":"static/js/186.2704361b.chunk.js","mappings":"+PAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEIC,EAAAA,EAAAA,IAAaP,GAFjB,OAEhBQ,EAFgB,OAGtBJ,EAAWI,GAHW,gDAKtBC,QAAQC,MAAR,MALsB,yDAAH,qDASvBJ,GACD,GAAE,CAACN,KAGF,gCACGG,EAAQQ,OAAS,IAChB,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,MAQhBV,EAAQQ,OAAS,IAChB,uEAIP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { fetchReviews } from \"../../components/services/Service\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const reviewsData = await fetchReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews.length < 1 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","fetchReviews","reviewsData","console","error","length","map","id","author","content"],"sourceRoot":""}